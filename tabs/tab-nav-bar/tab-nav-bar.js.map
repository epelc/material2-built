{"version":3,"sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","file":"tab-nav-bar.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n  Directive, NgZone, Inject, Optional,\n} from '@angular/core';\nimport {MdInkBar} from '../ink-bar';\nimport {MdRipple} from '../../core/ripple/index';\nimport {ViewportRuler} from '../../core/overlay/position/viewport-ruler';\nimport {MD_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions} from '../../core/ripple/ripple';\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport class MdTabNavBar {\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n   _inkBar: MdInkBar;\n/**\n * Notifies the component that the active link has been changed.\n * @param {?} element\n * @return {?}\n */\nupdateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n  }\n/**\n * Checks if the active link has been changed and, if so, will update the ink bar.\n * @return {?}\n */\nngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n      this._activeLinkChanged = false;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    '[class.mat-tab-nav-bar]': 'true',\n  },\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n};\n}\n\nfunction MdTabNavBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNavBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabNavBar.ctorParameters;\n/** @type {?} */\nMdTabNavBar.propDecorators;\n/** @type {?} */\nMdTabNavBar.prototype._activeLinkChanged;\n/** @type {?} */\nMdTabNavBar.prototype._activeLinkElement;\n/** @type {?} */\nMdTabNavBar.prototype._inkBar;\n}\n\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nexport class MdTabLink {\nprivate _isActive: boolean = false;\n/**\n * Whether the link is active.\n * @return {?}\n */\nget active(): boolean { return this._isActive; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n/**\n * @param {?} _mdTabNavBar\n * @param {?} _elementRef\n */\nconstructor(private _mdTabNavBar: MdTabNavBar,\nprivate _elementRef: ElementRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link]',\n  host: {\n    '[class.mat-tab-link]': 'true',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdTabNavBar, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n};\n}\n\nfunction MdTabLink_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLink.ctorParameters;\n/** @type {?} */\nMdTabLink.propDecorators;\n/** @type {?} */\nMdTabLink.prototype._isActive;\n/** @type {?} */\nMdTabLink.prototype._mdTabNavBar;\n/** @type {?} */\nMdTabLink.prototype._elementRef;\n}\n\n/**\n * Simple directive that extends the ripple and matches the selector of the MdTabLink. This\n * adds the ripple behavior to nav bar labels.\n */\nexport class MdTabLinkRipple extends MdRipple {\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} globalOptions\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone, ruler: ViewportRuler,\n                globalOptions: RippleGlobalOptions) {\n    super(elementRef, ngZone, ruler, globalOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link]',\n  host: {\n    '[class.mat-tab-link]': 'true',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\n}\n\nfunction MdTabLinkRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLinkRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLinkRipple.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}